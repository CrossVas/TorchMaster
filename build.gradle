buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.9'
}

apply plugin: 'net.minecraftforge.gradle.forge'

//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

def mcversion = "${mcversion_major}.${mcversion_minor}.${mcversion_patch}"
version = version_major + '.' + version_minor + '.' + version_patch + '.' + getBuildNumber()
group= "net.xalcon.torchmaster" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "torchmaster_" + mcversion

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = mcversion + "-" + forgeversion
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = mcp_mappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    replace '@VERSION@', project.version
    replace '@BUILD_NUMBER@', getBuildNumber()
    replace '@CERT_FINGERPRINT@', cert_fingerprint
}

repositories {
    maven { url 'http://dvs1.progwml6.com/files/maven' } // JEI
    maven { url 'http://tehnut.info/maven' } // hwyla
}

dependencies {
    //deobfCompile "mezz.jei:jei_${mcversion}:${jei_version}:api"
    //compile "mcp.mobius.waila:Hwyla:${hwyla_version}:api"

    runtime "mezz.jei:jei_${mcversion}:${jei_version}"
    //runtime "mcp.mobius.waila:Hwyla:${hwyla_version}"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':"[${mcversion_major}.${mcversion_minor},${mcversion_major}.${((mcversion_minor.toInteger())+1)})"
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

def curse_api_key=""

if(new File("$System.env.confidental_properties").exists()) {
    println("Found confidenntal gradle properties, loading...")
    Properties props = new Properties()
    props.load(new FileInputStream("$System.env.confidental_properties"))
    signJar.keyStore=props.jarsign_keystore
    signJar.alias=props.jarsign_keystore_alias
    signJar.storePass=props.jarsign_keystore_pass
    signJar.keyPass=props.jarsign_key_pass

    curse_api_key=props.curse_api_key
}

// build.dependsOn signJar

def static getBuildNumber() {
    return "$System.env.BUILD_NUMBER" != "null" ? "$System.env.BUILD_NUMBER" : "0"
}

curseforge {
    apiKey = curse_api_key

    project {
        id = "${curse_id}"
        changelogType = "markdown"
        changelog = new File('changelog.md')
        releaseType = "$System.env.release_type" != "null" ? "$System.env.release_type" : 'alpha'
        mainArtifact jar
    }
}

task versionTxt()  {
    doLast {
        new File(projectDir, "build/libs/version.txt").text = """$version"""
        new File(projectDir, "build/libs/artifact.txt").text = """${archivesBaseName}-${version}.jar"""
    }
}